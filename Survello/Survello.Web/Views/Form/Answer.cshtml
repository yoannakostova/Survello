@model Survello.Web.Models.FormViewModel

@{
    ViewData["Title"] = "Answer";
}

<h1>Answer</h1>

<h4>FormViewModel</h4>
<hr />

<div class="row">
    <div class="col-md-12">


        <form method="post" enctype="multipart/form-data" onsubmit="return validateForm()" asp-controller="Form" asp-action="Answer">

            <div class="form-group">
                @Html.HiddenFor(modelItem => (Model.Title))
                <input type="text" readonly class="form-control" value="@Model.Title" />
            </div>
            <div class="form-group">
                <input type="text" readonly class="form-control" value="@Model.Description">
            </div>

            @{
                var fileCounter = 0;
            }
            @{

                int textCounter = 0;
                int multipleChoiceCounter = 0;
                int documentCounter = 0;

            }
            @for (int i = 1; i <= Model.LastQuestionNumber; i++)
            {
                //Text question

                if (textCounter < Model.TextQuestions.Count && Model.TextQuestions[textCounter].QuestionNumber == i)
                {
                    <div class="form-group">
                        <div class="form-group">
                            <input type="text" readonly class="form-control" value="@Html.DisplayFor(modelItem => Model.TextQuestions[textCounter].Description, new { @class = "control-label col-md-12" })">
                        </div>

                        @Html.HiddenFor(modelItem => (Model.TextQuestions[textCounter].Id))
                        @Html.HiddenFor(modelItem => (Model.TextQuestions[textCounter].Description))
                        @if (Model.TextQuestions[textCounter].IsLongAnswer == true && Model.TextQuestions[textCounter].IsRequired == true)
                        {
                            <div class="form-group">
                                <textarea class="form-control" rows="3" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)></textarea>
                            </div>
                        }
                        else if (Model.TextQuestions[textCounter].IsLongAnswer == true && Model.TextQuestions[textCounter].IsRequired == false)
                        {
                            {
                                <div class="form-group">
                                    <textarea class="form-control" rows="3" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)></textarea>
                                </div>
                            }
                        }
                        else if (Model.TextQuestions[textCounter].IsLongAnswer == false && Model.TextQuestions[textCounter].IsRequired == true)
                        {
                            <div class="form-group">
                                <input class="form-group" type="text" required @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)>
                            </div>
                        }
                        else if (Model.TextQuestions[textCounter].IsLongAnswer == false && Model.TextQuestions[textCounter].IsRequired == false)
                        {
                            <div class="form-group">
                                <input class="form-group" type="text" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)>
                            </div>
                        }
                    </div>
                    <br />

                    textCounter++;
                }
                if (multipleChoiceCounter < Model.MultipleChoiceQuestions.Count && Model.MultipleChoiceQuestions[multipleChoiceCounter].QuestionNumber == i)
                {
                    @Html.HiddenFor(modelItem => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Id))
                    @Html.HiddenFor(modelItem => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Description))
                    <div class="form-group">
                        @Html.DisplayFor(modelItem => Model.MultipleChoiceQuestions[multipleChoiceCounter].Description, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-10">

                                    @for (int k = 0; k < Model.MultipleChoiceQuestions[multipleChoiceCounter].Options.Count; k++)
                                    {
                                        @Html.HiddenFor(item => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id))
                                        @Html.HiddenFor(item => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option))

                                        if (Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == true && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == true)
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input required type="checkbox" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                        else if ((Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == false && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == true))
                                        {

                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input required type="radio" name="radio+@i" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                        else if ((Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == true && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == false))
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input type="checkbox" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                        else if ((Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == false && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == false))
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input type="radio" name="radio+@i" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />

                    multipleChoiceCounter++;
                }
                if (documentCounter < Model.DocumentQuestions.Count && Model.DocumentQuestions[documentCounter].QuestionNumber == i)
                {

                    @Html.HiddenFor(modelItem => (Model.DocumentQuestions[documentCounter].Id))
                    @Html.HiddenFor(modelItem => (Model.DocumentQuestions[documentCounter].Description))
                    @Html.HiddenFor(modelItem => (Model.DocumentQuestions[documentCounter].FileNumberLimit))
                    @Html.HiddenFor(modelItem => (Model.DocumentQuestions[documentCounter].FileSize))
                    if (Model.DocumentQuestions[documentCounter].IsRequired == true)
                    {
                        <div id="custom-file-label" style="font-size: smaller">
                            <div class="form-group">
                                @Html.DisplayFor(modelItem => Model.DocumentQuestions[documentCounter].Description)
                                <label asp-for="@Model.DocumentQuestions[documentCounter].Files" class="btn btn-primary btn-sm"></label>
                                <input asp-for="@Model.DocumentQuestions[documentCounter].Files" type="file" id="@fileCounter" multiple="multiple" required />

                            </div>
                        </div>
                    }
                    else if (Model.DocumentQuestions[documentCounter].IsRequired == false)
                    {
                        <div id="custom-file-label" style="font-size: smaller">
                            <div class="form-group">
                                @Html.DisplayFor(modelItem => Model.DocumentQuestions[documentCounter].Description)
                                <label asp-for="@Model.DocumentQuestions[documentCounter].Files" class="btn btn-primary btn-sm"></label>
                                <input asp-for="@Model.DocumentQuestions[documentCounter].Files" type="file" id="@fileCounter" multiple="multiple" />
                            </div>
                        </div>
                    }
                    fileCounter++;
                }
                documentCounter++;
            }

            <div class="form-group">
                <input type="submit" value="Save" id="6" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    function validateForm() {
        var count = @Model.DocumentQuestions.Count();
        var allLimits = [];
        var allFileSize = [];
      @foreach (var item in Model.DocumentQuestions)
      {
          @:allLimits.push(@item.FileNumberLimit);
          @:allFileSize.push(@item.FileSize*1024*1024);
      }
        for (var i = 0; i < count; i++) {
          var files = $('#'+i)[0].files;
            if (files.length > allLimits[i]) {
                alert("You can select max " + limit + " files."); //limit should be changed
                return false;
            }
          }
          for (var j = 0; j < files.length; j++) {
              if (files[j].size > allFileSize[i]) {
                  alert("File is too big!");
                  return false;
              }
          }
          return true;
        };
    };
 
</script>
