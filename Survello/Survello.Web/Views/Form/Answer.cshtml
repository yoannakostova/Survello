@model Survello.Web.Models.FormViewModel

@{
    ViewData["Title"] = "Answer";
}

<h1>Answer</h1>

<h4>FormViewModel</h4>
<hr />

<div class="row">
    <div class="col-md-12">


        <form method="post" enctype="multipart/form-data" asp-controller="Form" asp-action="Answer">

            <div class="form-group">
                <input type="text" readonly class="form-control" value="@Html.HiddenFor(modelItem => (Model.Title))" />"
            </div>
            <div class="form-group">
                <input type="text" readonly class="form-control" value="@Model.Description">
            </div>

            @{

                int textCounter = 0;
                int multipleChoiceCounter = 0;
                int documentCounter = 0;

            }
            @for (int i = 1; i <= Model.LastQuestionNumber; i++)
            {
                //Text question


                if (textCounter < Model.TextQuestions.Count && Model.TextQuestions[textCounter].QuestionNumber == i)
                {
                    <div class="form-group">
                        @Html.DisplayFor(modelItem => Model.TextQuestions[textCounter].Description, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">

                            @Html.HiddenFor(modelItem => (Model.TextQuestions[textCounter].Id))
                            @Html.HiddenFor(modelItem => (Model.TextQuestions[textCounter].Description))
                            @if (Model.TextQuestions[textCounter].IsLongAnswer == true && Model.TextQuestions[textCounter].IsRequired == true)
                            {
                                <div class="form-group">
                                    <textarea required class="form-control" rows="5" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)></textarea>
                                </div>
                            }
                            else if (Model.TextQuestions[textCounter].IsLongAnswer == true && Model.TextQuestions[textCounter].IsRequired == false)
                            {
                                {
                                    <div class="form-group">
                                        <textarea class="form-control" rows="5" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)></textarea>
                                    </div>
                                }
                            }
                            else if (Model.TextQuestions[textCounter].IsLongAnswer == false && Model.TextQuestions[textCounter].IsRequired == true)
                            {
                                <div class="form-group">
                                    <div>
                                        <input required type="text" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)>
                                    </div>
                                </div>
                            }
                            else if (Model.TextQuestions[textCounter].IsLongAnswer == false && Model.TextQuestions[textCounter].IsRequired == false)
                            {
                                <div class="form-group">
                                    <div>
                                        <input type="text" @Html.EditorFor(modelItem => (Model.TextQuestions[textCounter]).Answer)>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <br />

                    textCounter++;
                }
                if (multipleChoiceCounter < Model.MultipleChoiceQuestions.Count && Model.MultipleChoiceQuestions[multipleChoiceCounter].QuestionNumber == i)
                {
                    @Html.HiddenFor(modelItem => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Id))
                    @Html.HiddenFor(modelItem => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Description))
                    <div class="form-group">
                        @Html.DisplayFor(modelItem => Model.MultipleChoiceQuestions[multipleChoiceCounter].Description, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-10">

                                    @for (int k = 0; k < Model.MultipleChoiceQuestions[multipleChoiceCounter].Options.Count; k++)
                                    {
                                        @Html.HiddenFor(item => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id))
                                        @Html.HiddenFor(item => (Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option))

                                        if (Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == true && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == true)
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input required type="checkbox" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                        else if ((Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == false && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == true))
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input required type="radio" name="radio+@i" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                        else if ((Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == true && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == false))
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input type="checkbox" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                        else if ((Model.MultipleChoiceQuestions[multipleChoiceCounter].IsMultipleAnswer == false && Model.MultipleChoiceQuestions[multipleChoiceCounter].IsRequired == false))
                                        {
                                            <div class="form-check-inline">
                                                <label class="form-check-label" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer">
                                                    <input type="radio" name="radio+@i" id="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Id" asp-for="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Answer" value="@Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option" />

                                                    @Model.MultipleChoiceQuestions[multipleChoiceCounter].Options[k].Option
                                                </label>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />

                    multipleChoiceCounter++;
                }
                if (documentCounter < Model.DocumentQuestions.Count && Model.DocumentQuestions[documentCounter].QuestionNumber == i)
                {
                    @Html.HiddenFor(modelItem => (Model.DocumentQuestions[documentCounter].Id))
                    @Html.HiddenFor(modelItem => (Model.DocumentQuestions[documentCounter].Description))
                    if (Model.DocumentQuestions[documentCounter].IsRequired == true)
                    {
                        <div id="custom-file-label" style="font-size: smaller">
                            <div class="form-group">
                                @Html.DisplayFor(modelItem => Model.DocumentQuestions[documentCounter].Description)
                                <label asp-for="@Model.DocumentQuestions[documentCounter].Files" class="btn btn-primary btn-sm"></label>
                                <input asp-for="@Model.DocumentQuestions[documentCounter].Files" type="file" id="file+@i" multiple="multiple" required />
                            </div>
                        </div>
                    }
                    else if (Model.DocumentQuestions[documentCounter].IsRequired == false)
                    {
                        <div id="custom-file-label" style="font-size: smaller">
                            <div class="form-group">
                                @Html.DisplayFor(modelItem => Model.DocumentQuestions[documentCounter].Description)
                                <label asp-for="@Model.DocumentQuestions[documentCounter].Files" class="btn btn-primary btn-sm"></label>
                                <input asp-for="@Model.DocumentQuestions[documentCounter].Files" type="file" id="file+@i" multiple="multiple" />
                            </div>
                        </div>
                    }
                }
                documentCounter++;
            }

            <div class="form-group">
                <input type="submit" value="Save" id="6" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    //    var uploadField = document.getElementById('td[id^="file"]');

    //uploadField.onchange = function () {
    //    if (this.files[0].size > 10485760) {
    //        alert("File is too big!");
    //        this.value = "";
    //    };
    //};
    //$(function () {
    //    $("input[type='file']").click(function () {
    //        var $fileUpload = $("input[type='file']");
    //        debugger
    //        if (parseInt($fileUpload.get(0).files.length) > 2) {
    //            alert("You can only upload a maximum of 2 files");
    //        }
    //    });
    //});​
    @*var n =”<%=@Model.DocumentQuestions%>”*@
    //jQuery.validator.addMethod("filesize_max", function (value, element, param) {
    //    var isOptional = this.optional(element),
    //        file;

    //    if (isOptional) {
    //        return isOptional;
    //    }

    //    if ($(element).attr("type") === "file") {

    //        if (element.files && element.files.length) {

    //            file = element.files[0];
    //            return (file.size && file.size <= param);
    //        }
    //    }
    //    return false;
    //}, "File size is too large.");
    //Funcion for multiple answers
    //$(document).ready(function () {
    //    $("input[type='submit']").click(function () {
    //        var radioValue = $("input[name='multi']:checked").val();
    //        if (radioValue) {
    //            alert("Your are a - " + radioValue);
    //        }
    //    });
    //});
    //function radio(n) {
    //    $('#radio' + n).click();
    //    $('.radio').removeClass('selectedRadio');
    //    $(this).addClass('selectedRadio');
    //    $('#radionumber').val($(this).attr('id').substring(5));
    //}
    //$('input[type="file"]').change(function (e) {
    //    let fileName = e.target.files[0].name;
    //    $('#custom-file-label').append(fileName);
    //    console.log(fileName)
    //});
</script>
